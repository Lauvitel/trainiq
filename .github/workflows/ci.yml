name: TrainIQ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  backend-ci:
    runs-on: ubuntu-latest
    container:
      image: python:3.10-slim

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: trainiq
        ports: ['5432:5432']
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:7
        ports: ['6379:6379']

      mongo:
        image: mongo:6
        ports: ['27017:27017']

      nginx:
        image: nginx:alpine
        ports: ['80:80']
        volumes:
          - ./docker/nginx:/etc/nginx:ro
        options: >-
          --health-cmd="wget --spider -q http://localhost || exit 1"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=10

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up system dependencies and Python packages
        run: |
          apt update && apt install -y gcc libpq-dev curl netcat
          pip install -r backend/requirements.txt
          pip install pytest httpx black boto3

      - name: Launch MinIO manually
        run: |
          docker run -d --name minio             -e MINIO_ROOT_USER=minio             -e MINIO_ROOT_PASSWORD=minio123             -p 9000:9000             minio/minio server /data --console-address ":9001"

      - name: Wait for services
        run: |
          for i in {1..10}; do curl -sSf http://nginx && break || sleep 3; done
          for i in {1..10}; do curl -sSf http://localhost:9000/minio/health/live && break || sleep 3; done

      - name: Run tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: pytest backend/tests